function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [emailError, setEmailError] = useState(false);
  const [passwordError, setPasswordError] = useState(false);
  const [isLoading, setIsLoading] = useState(false); // State for loading indicator
  const [open, setOpen] = useState(false); // State for toast message
  const navigate = useNavigate();
  const { setUserId } = useContext(UserContext);

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
    setEmailError(
      !validateEmail(e.target.value) ||
        (e.target.value.trim() === "" && e.target.value !== ""),
    );
  };

  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
    setPasswordError(
      !validatePassword(e.target.value) ||
        (e.target.value.trim() === "" && e.target.value !== ""),
    );
  };

  const validateEmail = (email) => {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
  };

  const validatePassword = (password) => {
    return /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d]{8,}$/.test(password);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (validateEmail(email) && validatePassword(password)) {
      setIsLoading(true); // Show loading indicator

      try {
        const response = await fetch(
          "https://40ba4806-fabd-42c1-b9ab-f6cfa1447955-00-v6bom5jytel1.pike.replit.dev:3000/login",
          {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, password }),
          },
        );

        if (response.ok) {
          const data = await response.json();
          setUserId(data.email); // Set the user ID to the email
          navigate("/"); // Redirect to home page
          setOpen(true); // Show toast message
        } else {
          const error = await response.json();
          console.error("Login failed:", error.error);
          alert(error.error || "Login failed. Please try again.");
        }
      } catch (error) {
        console.error("Error during login:", error);
        alert("An unexpected error occurred. Please try again later.");
      } finally {
        setIsLoading(false); // Hide loading indicator
      }
    } else {
      console.log("Please correct the errors in the form.");
    }
  };

  const handleClose = (event, reason) => {
    if (reason === "clickaway") {
      return;
    }

    setOpen(false);
  };